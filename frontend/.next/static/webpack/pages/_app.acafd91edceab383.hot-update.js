"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./Context/EvidanceContext.js":
/*!************************************!*\
  !*** ./Context/EvidanceContext.js ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EvidanceContext\": function() { return /* binding */ EvidanceContext; },\n/* harmony export */   \"EvidanceProvider\": function() { return /* binding */ EvidanceProvider; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3modal */ \"./node_modules/web3modal/dist/index.js\");\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(web3modal__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants */ \"./Context/constants.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n//INTERNAL  IMPORT\n\n//---FETCHING SMART CONTRACT\nconst fetchContract = async (signerOrProvider, type)=>{\n    if (type === \"coin\") return new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.Contract(_constants__WEBPACK_IMPORTED_MODULE_3__.CoinAddress, _constants__WEBPACK_IMPORTED_MODULE_3__.coinABI, signerOrProvider);\n    if (type === \"market\") return new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.Contract(_constants__WEBPACK_IMPORTED_MODULE_3__.MarketAddress, _constants__WEBPACK_IMPORTED_MODULE_3__.marketABI, signerOrProvider);\n};\n//---CONNECTING WITH SMART CONTRACT\nconst connectingWithSmartContract = async (type)=>{\n    try {\n        const web3Modal = new (web3modal__WEBPACK_IMPORTED_MODULE_2___default())();\n        const connection = await web3Modal.connect();\n        const provider = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.providers.Web3Provider(connection);\n        const signer = provider.getSigner();\n        const contract = await fetchContract(signer, type);\n        return contract;\n    } catch (error) {\n        console.log(\"Something went wrong while connecting with contract\", error);\n    }\n};\nconst EvidanceContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createContext();\nconst EvidanceProvider = (param)=>{\n    let { children  } = param;\n    _s();\n    const titleData = \"Future of Shopping with our AI NFT Marketplace\";\n    //------USESTAT\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [currentAccount, setCurrentAccount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [accountBalance, setAccountBalance] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    //---CHECK IF WALLET IS CONNECTD\n    const checkIfWalletConnected = async ()=>{\n        try {\n            if (!window.ethereum) return setError(\"Install MetaMask\");\n            const accounts = await window.ethereum.request({\n                method: \"eth_accounts\"\n            });\n            if (accounts.length) {\n                setCurrentAccount(accounts[0].toLowerCase());\n                // const provider = new ethers.providers.Web3Provider(window.ethereum);\n                const contract = await connectingWithSmartContract(\"coin\");\n                const getBalance = await contract.balanceOf(accounts[0]);\n                setAccountBalance(getBalance);\n            } else {\n                setError(\"No Account Found\");\n            }\n        } catch (error) {\n            setError(\"Something wrong while connecting to wallet\");\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        checkIfWalletConnected();\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!currentAccount) return;\n    }, [\n        currentAccount\n    ]);\n    //---CONNET WALLET FUNCTION\n    const connectWallet = async ()=>{\n        try {\n            if (!window.ethereum) return setError(\"Install MetaMask\");\n            const accounts = await window.ethereum.request({\n                method: \"eth_requestAccounts\"\n            });\n            setCurrentAccount(accounts[0].toLowerCase());\n        } catch (error) {\n            setError(\"Error while connecting to wallet\");\n        }\n    };\n    // ---- Create Compilance\n    const createEvidence = async ()=>{\n        try {\n            if (currentAccount) {\n                let OwnerNonce = await owner.getNonce();\n                const contract = await connectingWithSmartContract(\"market\");\n                const createEvidence = await contract.createEvidence({\n                    nonce: OwnerNonce\n                });\n                console.log(createEvidence);\n            }\n        } catch (error) {\n            setError(\"Error while creating evidence\");\n        }\n    };\n    const getAllEvidence = async ()=>{\n        try {\n            if (currentAccount) {\n                const contract = await connectingWithSmartContract(\"market\");\n                const getEvidence = await contract.getAllEvidence();\n                return getEvidence;\n            }\n        } catch (error) {\n            setError(\"Error while creating evidence\");\n        }\n    };\n    const approveEvidence = async (id)=>{\n        try {\n            if (currentAccount) {\n                const contract = await connectingWithSmartContract(\"market\");\n                const approveEvidence = await contract.approveEvidence(id);\n                await approveEvidence.wait();\n                console.log(approveEvidence);\n            }\n        } catch (error) {\n            setError(\"Error while creating evidence\");\n        }\n    };\n    const createOrder = async (price)=>{\n        try {\n            if (currentAccount) {\n                const contract = await connectingWithSmartContract(\"market\");\n                // const trx = await contractCoin.approve(MarketAddress, price);\n                // await trx.wait();\n                const createOrder = await contract.createOrder(price);\n                console.log(createOrder);\n            }\n        } catch (error) {\n            setError(\"Error while creating evidence\");\n        }\n    };\n    const getAllOrders = async ()=>{\n        try {\n            if (currentAccount) {\n                const contract = await connectingWithSmartContract(\"market\");\n                const getOrders = await contract.getAllOrders();\n                return getOrders;\n            }\n        } catch (error) {\n            setError(\"Error while creating evidence\");\n        }\n    };\n    const acceptOrder = async (id, price)=>{\n        try {\n            if (currentAccount) {\n                const contract = await connectingWithSmartContract(\"market\");\n                const contractCoin = await connectingWithSmartContract(\"coin\");\n                const trx = await contractCoin.approve(_constants__WEBPACK_IMPORTED_MODULE_3__.MarketAddress, price);\n                await trx.wait();\n                const acceptOrder = await contract.acceptOrder(id);\n                await acceptOrder.wait();\n                console.log(acceptOrder);\n            }\n        } catch (error) {\n            setError(\"Error while creating evidence\");\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(EvidanceContext.Provider, {\n        value: {\n            checkIfWalletConnected,\n            connectWallet,\n            currentAccount,\n            titleData,\n            error,\n            loading,\n            accountBalance,\n            createEvidence,\n            getAllEvidence,\n            approveEvidence,\n            createOrder,\n            getAllOrders,\n            acceptOrder\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/usamalatif/Desktop/Upwork/kaseem/ComplyCoin2023/frontend/Context/EvidanceContext.js\",\n        lineNumber: 192,\n        columnNumber: 3\n    }, undefined);\n};\n_s(EvidanceProvider, \"qQtFuIaue6uCliA/o3S/iHl1ASo=\");\n_c = EvidanceProvider;\nvar _c;\n$RefreshReg$(_c, \"EvidanceProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./Context/EvidanceContext.js\n"));

/***/ })

});
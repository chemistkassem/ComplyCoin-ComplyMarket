"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./Context/EvidanceContext.js":
/*!************************************!*\
  !*** ./Context/EvidanceContext.js ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EvidanceContext\": function() { return /* binding */ EvidanceContext; },\n/* harmony export */   \"EvidanceProvider\": function() { return /* binding */ EvidanceProvider; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3modal */ \"./node_modules/web3modal/dist/index.js\");\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(web3modal__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants */ \"./Context/constants.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n//INTERNAL  IMPORT\n\n//---FETCHING SMART CONTRACT\nconst fetchContract = async (signerOrProvider, type)=>{\n    if (type === \"coin\") return new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.Contract(_constants__WEBPACK_IMPORTED_MODULE_3__.CoinAddress, _constants__WEBPACK_IMPORTED_MODULE_3__.coinABI, signerOrProvider);\n    if (type === \"market\") return new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.Contract(_constants__WEBPACK_IMPORTED_MODULE_3__.MarketAddress, _constants__WEBPACK_IMPORTED_MODULE_3__.marketABI, signerOrProvider);\n};\n//---CONNECTING WITH SMART CONTRACT\nconst connectingWithSmartContract = async (type)=>{\n    try {\n        const web3Modal = new (web3modal__WEBPACK_IMPORTED_MODULE_2___default())();\n        const connection = await web3Modal.connect();\n        const provider = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.providers.Web3Provider(connection);\n        const signer = provider.getSigner();\n        const contract = await fetchContract(signer, type);\n        return [\n            contract\n        ];\n    } catch (error) {\n        console.log(\"Something went wrong while connecting with contract\", error);\n    }\n};\nconst EvidanceContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createContext();\nconst EvidanceProvider = (param)=>{\n    let { children  } = param;\n    _s();\n    const titleData = \"Future of Shopping with our AI NFT Marketplace\";\n    //------USESTAT\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [currentAccount, setCurrentAccount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [accountBalance, setAccountBalance] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [signer, setSigner] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    //---CHECK IF WALLET IS CONNECTD\n    const checkIfWalletConnected = async ()=>{\n        try {\n            if (!window.ethereum) return setError(\"Install MetaMask\");\n            const accounts = await window.ethereum.request({\n                method: \"eth_accounts\"\n            });\n            if (accounts.length) {\n                setCurrentAccount(accounts[0].toLowerCase());\n                // const provider = new ethers.providers.Web3Provider(window.ethereum);\n                const contract = await connectingWithSmartContract(\"coin\");\n                const getBalance = await contract.balanceOf(accounts[0]);\n                setAccountBalance(getBalance);\n            } else {\n                setError(\"No Account Found\");\n            }\n        } catch (error) {\n            setError(\"Something wrong while connecting to wallet\");\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        checkIfWalletConnected();\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!currentAccount) return;\n    }, [\n        currentAccount\n    ]);\n    //---CONNET WALLET FUNCTION\n    const connectWallet = async ()=>{\n        try {\n            if (!window.ethereum) return setError(\"Install MetaMask\");\n            const accounts = await window.ethereum.request({\n                method: \"eth_requestAccounts\"\n            });\n            setCurrentAccount(accounts[0].toLowerCase());\n        } catch (error) {\n            setError(\"Error while connecting to wallet\");\n        }\n    };\n    // ---- Create Compilance\n    const createEvidence = async ()=>{\n        try {\n            console.log(\"create evidence\");\n            if (currentAccount) {\n                let OwnerNonce = await owner.getNonce();\n                const contract = await connectingWithSmartContract(\"market\");\n                const createEvidence = await contract.createEvidence({\n                    nonce: OwnerNonce\n                });\n                console.log(createEvidence);\n            }\n        } catch (error) {\n            console.log(error);\n            setError(\"Error while creating evidence\");\n        }\n    };\n    const getAllEvidence = async ()=>{\n        try {\n            if (currentAccount) {\n                const contract = await connectingWithSmartContract(\"market\");\n                const getEvidence = await contract.getAllEvidence();\n                return getEvidence;\n            }\n        } catch (error) {\n            setError(\"Error while creating evidence\");\n        }\n    };\n    const approveEvidence = async (id)=>{\n        try {\n            if (currentAccount) {\n                const contract = await connectingWithSmartContract(\"market\");\n                const approveEvidence = await contract.approveEvidence(id);\n                await approveEvidence.wait();\n                console.log(approveEvidence);\n            }\n        } catch (error) {\n            setError(\"Error while creating evidence\");\n        }\n    };\n    const createOrder = async (price)=>{\n        try {\n            if (currentAccount) {\n                const contract = await connectingWithSmartContract(\"market\");\n                // const trx = await contractCoin.approve(MarketAddress, price);\n                // await trx.wait();\n                const createOrder = await contract.createOrder(price);\n                console.log(createOrder);\n            }\n        } catch (error) {\n            setError(\"Error while creating evidence\");\n        }\n    };\n    const getAllOrders = async ()=>{\n        try {\n            if (currentAccount) {\n                const contract = await connectingWithSmartContract(\"market\");\n                const getOrders = await contract.getAllOrders();\n                return getOrders;\n            }\n        } catch (error) {\n            setError(\"Error while creating evidence\");\n        }\n    };\n    const acceptOrder = async (id, price)=>{\n        try {\n            if (currentAccount) {\n                const contract = await connectingWithSmartContract(\"market\");\n                const contractCoin = await connectingWithSmartContract(\"coin\");\n                const trx = await contractCoin.approve(_constants__WEBPACK_IMPORTED_MODULE_3__.MarketAddress, price);\n                await trx.wait();\n                const acceptOrder = await contract.acceptOrder(id);\n                await acceptOrder.wait();\n                console.log(acceptOrder);\n            }\n        } catch (error) {\n            setError(\"Error while creating evidence\");\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(EvidanceContext.Provider, {\n        value: {\n            checkIfWalletConnected,\n            connectWallet,\n            currentAccount,\n            titleData,\n            error,\n            loading,\n            accountBalance,\n            createEvidence,\n            getAllEvidence,\n            approveEvidence,\n            createOrder,\n            getAllOrders,\n            acceptOrder\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/usamalatif/Desktop/Upwork/kaseem/ComplyCoin2023/frontend/Context/EvidanceContext.js\",\n        lineNumber: 196,\n        columnNumber: 3\n    }, undefined);\n};\n_s(EvidanceProvider, \"o5d3cvTey6nleMcjHuTqjnj9zPY=\");\n_c = EvidanceProvider;\nvar _c;\n$RefreshReg$(_c, \"EvidanceProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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bUM7WUFDYixDQUFDO1FBQ0YsRUFBQyxPQUFNckMsT0FBTTtZQUNaUSxTQUFTO1FBQ1Y7SUFDRDtJQUVBLE1BQU0rQixlQUFlLFVBQVU7UUFDOUIsSUFBRztZQUNGLElBQUc5QixnQkFBZTtnQkFDakIsTUFBTVYsV0FBVyxNQUFNVCw0QkFBNEI7Z0JBQ25ELE1BQU1rRCxZQUFZLE1BQU16QyxTQUFTd0MsWUFBWTtnQkFDN0MsT0FBT0M7WUFDUixDQUFDO1FBQ0YsRUFBQyxPQUFNeEMsT0FBTTtZQUNaUSxTQUFTO1FBQ1Y7SUFDRDtJQUVBLE1BQU1pQyxjQUFjLE9BQU1OLElBQUlHLFFBQVM7UUFDdEMsSUFBRztZQUNGLElBQUc3QixnQkFBZTtnQkFDakIsTUFBTVYsV0FBVyxNQUFNVCw0QkFBNEI7Z0JBQ25ELE1BQU1vRCxlQUFlLE1BQU1wRCw0QkFBNEI7Z0JBRXZELE1BQU1xRCxNQUFNLE1BQU1ELGFBQWFFLE9BQU8sQ0FBQzNELHFEQUFhQSxFQUFFcUQ7Z0JBQ3RELE1BQU1LLElBQUlQLElBQUk7Z0JBRWQsTUFBTUssY0FBYyxNQUFNMUMsU0FBUzBDLFdBQVcsQ0FBQ047Z0JBQy9DLE1BQU1NLFlBQVlMLElBQUk7Z0JBQ3RCbkMsUUFBUUMsR0FBRyxDQUFDdUM7WUFDYixDQUFDO1FBQ0YsRUFBQyxPQUFNekMsT0FBTTtZQUNaUSxTQUFTO1FBQ1Y7SUFDRDtJQUtBLHFCQUNDLDhEQUFDTCxnQkFBZ0IwQyxRQUFRO1FBQ3hCQyxPQUFPO1lBQ045QjtZQUNBVTtZQUNBakI7WUFDQUY7WUFDQVA7WUFDQWM7WUFDQUg7WUFDQWdCO1lBQ0FLO1lBQ0FFO1lBQ0FHO1lBQ0FFO1lBQ0FFO1FBQ0Q7a0JBRUNuQzs7Ozs7O0FBR0osRUFBRTtHQTlLV0Q7S0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vQ29udGV4dC9FdmlkYW5jZUNvbnRleHQuanM/MDA3NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCwgdXNlQ29udGV4dCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFdlYjNNb2RhbCBmcm9tIFwid2ViM21vZGFsXCI7XG5pbXBvcnQgeyBldGhlcnMgfSBmcm9tIFwiZXRoZXJzXCI7XG5cbi8vSU5URVJOQUwgIElNUE9SVFxuaW1wb3J0IHtcblx0Y29pbkFCSSxcblx0Q29pbkFkZHJlc3MsXG5cdG1hcmtldEFCSSxcblx0TWFya2V0QWRkcmVzc1xufSBmcm9tIFwiLi9jb25zdGFudHNcIjtcblxuLy8tLS1GRVRDSElORyBTTUFSVCBDT05UUkFDVFxuY29uc3QgZmV0Y2hDb250cmFjdCA9IGFzeW5jIChzaWduZXJPclByb3ZpZGVyLCB0eXBlKSA9PiB7XG5cdGlmKHR5cGUgPT09IFwiY29pblwiKSByZXR1cm4gbmV3IGV0aGVycy5Db250cmFjdChDb2luQWRkcmVzcyxcblx0XHRjb2luQUJJLFxuXHRcdHNpZ25lck9yUHJvdmlkZXJcblx0KTtcblx0aWYodHlwZSA9PT0gXCJtYXJrZXRcIikgcmV0dXJuIG5ldyBldGhlcnMuQ29udHJhY3QoTWFya2V0QWRkcmVzcyxcblx0XHRtYXJrZXRBQkksXG5cdFx0c2lnbmVyT3JQcm92aWRlclxuXHQpO1xufTtcblxuLy8tLS1DT05ORUNUSU5HIFdJVEggU01BUlQgQ09OVFJBQ1RcbmNvbnN0IGNvbm5lY3RpbmdXaXRoU21hcnRDb250cmFjdCA9IGFzeW5jICh0eXBlKSA9PiB7XG5cdHRyeSB7XG5cdFx0Y29uc3Qgd2ViM01vZGFsID0gbmV3IFdlYjNNb2RhbCgpO1xuXHRcdGNvbnN0IGNvbm5lY3Rpb24gPSBhd2FpdCB3ZWIzTW9kYWwuY29ubmVjdCgpO1xuXHRcdGNvbnN0IHByb3ZpZGVyID0gbmV3IGV0aGVycy5wcm92aWRlcnMuV2ViM1Byb3ZpZGVyKGNvbm5lY3Rpb24pO1xuXHRcdGNvbnN0IHNpZ25lciA9IHByb3ZpZGVyLmdldFNpZ25lcigpO1xuXHRcdGNvbnN0IGNvbnRyYWN0ID0gYXdhaXQgZmV0Y2hDb250cmFjdChzaWduZXIsIHR5cGUpO1xuXHRcblx0XHRyZXR1cm4gW2NvbnRyYWN0XTtcblx0fSBjYXRjaCAoZXJyb3IpIHtcblx0XHRjb25zb2xlLmxvZyhcIlNvbWV0aGluZyB3ZW50IHdyb25nIHdoaWxlIGNvbm5lY3Rpbmcgd2l0aCBjb250cmFjdFwiLCBlcnJvcik7XG5cdH1cbn07XG5cbmV4cG9ydCBjb25zdCBFdmlkYW5jZUNvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KCk7XG5cbmV4cG9ydCBjb25zdCBFdmlkYW5jZVByb3ZpZGVyID0gKHsgY2hpbGRyZW4gfSkgPT4ge1xuXHRjb25zdCB0aXRsZURhdGEgPSBcIkZ1dHVyZSBvZiBTaG9wcGluZyB3aXRoIG91ciBBSSBORlQgTWFya2V0cGxhY2VcIjtcblxuXHQvLy0tLS0tLVVTRVNUQVRcblx0Y29uc3QgW2Vycm9yLCBzZXRFcnJvcl0gPSB1c2VTdGF0ZShcIlwiKTtcblx0Y29uc3QgW2N1cnJlbnRBY2NvdW50LCBzZXRDdXJyZW50QWNjb3VudF0gPSB1c2VTdGF0ZShcIlwiKTtcblx0Y29uc3QgW2FjY291bnRCYWxhbmNlLCBzZXRBY2NvdW50QmFsYW5jZV0gPSB1c2VTdGF0ZShcIlwiKTtcblx0Y29uc3QgW3NpZ25lciwgc2V0U2lnbmVyXSA9IHVzZVN0YXRlKFwiXCIpO1xuXG5cdGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuXHQvLy0tLUNIRUNLIElGIFdBTExFVCBJUyBDT05ORUNURFxuXHRjb25zdCBjaGVja0lmV2FsbGV0Q29ubmVjdGVkID0gYXN5bmMgKCkgPT4ge1xuXHRcdHRyeSB7XG5cdFx0XHRpZiAoIXdpbmRvdy5ldGhlcmV1bSkgcmV0dXJuIHNldEVycm9yKFwiSW5zdGFsbCBNZXRhTWFza1wiKTtcblxuXHRcdFx0Y29uc3QgYWNjb3VudHMgPSBhd2FpdCB3aW5kb3cuZXRoZXJldW0ucmVxdWVzdCh7XG5cdFx0XHRcdG1ldGhvZDogXCJldGhfYWNjb3VudHNcIixcblx0XHRcdH0pO1xuXG5cdFx0XHRpZiAoYWNjb3VudHMubGVuZ3RoKSB7XG5cdFx0XHRcdHNldEN1cnJlbnRBY2NvdW50KGFjY291bnRzWzBdLnRvTG93ZXJDYXNlKCkpO1xuXHRcdFx0XHQvLyBjb25zdCBwcm92aWRlciA9IG5ldyBldGhlcnMucHJvdmlkZXJzLldlYjNQcm92aWRlcih3aW5kb3cuZXRoZXJldW0pO1xuXHRcdFx0XHRcblx0XHRcdFx0Y29uc3QgY29udHJhY3QgPSBhd2FpdCBjb25uZWN0aW5nV2l0aFNtYXJ0Q29udHJhY3QoXCJjb2luXCIpO1xuXG5cdFx0XHRcdGNvbnN0IGdldEJhbGFuY2UgPSBhd2FpdCBjb250cmFjdC5iYWxhbmNlT2YoYWNjb3VudHNbMF0pO1xuXHRcdFx0XHRzZXRBY2NvdW50QmFsYW5jZShnZXRCYWxhbmNlKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHNldEVycm9yKFwiTm8gQWNjb3VudCBGb3VuZFwiKTtcblx0XHRcdH1cblx0XHR9IGNhdGNoIChlcnJvcikge1xuXHRcdFx0c2V0RXJyb3IoXCJTb21ldGhpbmcgd3Jvbmcgd2hpbGUgY29ubmVjdGluZyB0byB3YWxsZXRcIik7XG5cdFx0fVxuXHR9O1xuXHRcblx0dXNlRWZmZWN0KCgpID0+IHtcblx0XHRjaGVja0lmV2FsbGV0Q29ubmVjdGVkKCk7XG5cdH0sIFtdKTtcblxuXHR1c2VFZmZlY3QoKCkgPT4ge1xuXHRcdGlmICghY3VycmVudEFjY291bnQpIHJldHVybjtcblx0fSwgW2N1cnJlbnRBY2NvdW50XSk7XG5cblx0Ly8tLS1DT05ORVQgV0FMTEVUIEZVTkNUSU9OXG5cdGNvbnN0IGNvbm5lY3RXYWxsZXQgPSBhc3luYyAoKSA9PiB7XG5cdFx0dHJ5IHtcblx0XHRcdGlmICghd2luZG93LmV0aGVyZXVtKSByZXR1cm4gc2V0RXJyb3IoXCJJbnN0YWxsIE1ldGFNYXNrXCIpO1xuXG5cdFx0XHRjb25zdCBhY2NvdW50cyA9IGF3YWl0IHdpbmRvdy5ldGhlcmV1bS5yZXF1ZXN0KHtcblx0XHRcdFx0bWV0aG9kOiBcImV0aF9yZXF1ZXN0QWNjb3VudHNcIixcblx0XHRcdH0pO1xuXHRcdFx0c2V0Q3VycmVudEFjY291bnQoYWNjb3VudHNbMF0udG9Mb3dlckNhc2UoKSk7XG5cdFx0fSBjYXRjaCAoZXJyb3IpIHtcblx0XHRcdHNldEVycm9yKFwiRXJyb3Igd2hpbGUgY29ubmVjdGluZyB0byB3YWxsZXRcIik7XG5cdFx0fVxuXHR9O1xuXG5cblx0Ly8gLS0tLSBDcmVhdGUgQ29tcGlsYW5jZVxuXG5cdGNvbnN0IGNyZWF0ZUV2aWRlbmNlID0gYXN5bmMoKSA9Pntcblx0XHR0cnl7XG5cdFx0XHRjb25zb2xlLmxvZyhcImNyZWF0ZSBldmlkZW5jZVwiKVxuXHRcdFx0aWYoY3VycmVudEFjY291bnQpe1xuXHRcdFx0XHRsZXQgT3duZXJOb25jZSA9IGF3YWl0IG93bmVyLmdldE5vbmNlKCk7XG5cdFx0XHRcdFxuXHRcdFx0XHRjb25zdCBjb250cmFjdCA9IGF3YWl0IGNvbm5lY3RpbmdXaXRoU21hcnRDb250cmFjdChcIm1hcmtldFwiKTtcblx0XHRcdFx0Y29uc3QgY3JlYXRlRXZpZGVuY2UgPSBhd2FpdCBjb250cmFjdC5jcmVhdGVFdmlkZW5jZSh7XG5cdFx0XHRcdFx0bm9uY2U6IE93bmVyTm9uY2Vcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGNvbnNvbGUubG9nKGNyZWF0ZUV2aWRlbmNlKTtcblx0XHRcdH1cblx0XHR9Y2F0Y2goZXJyb3Ipe1xuXHRcdFx0Y29uc29sZS5sb2coZXJyb3IpO1xuXHRcdFx0c2V0RXJyb3IoXCJFcnJvciB3aGlsZSBjcmVhdGluZyBldmlkZW5jZVwiKTtcblx0XHR9XG5cdH1cblxuXHRjb25zdCBnZXRBbGxFdmlkZW5jZSA9IGFzeW5jKCkgPT57XG5cdFx0dHJ5e1xuXHRcdFx0aWYoY3VycmVudEFjY291bnQpe1xuXHRcdFx0XHRjb25zdCBjb250cmFjdCA9IGF3YWl0IGNvbm5lY3RpbmdXaXRoU21hcnRDb250cmFjdChcIm1hcmtldFwiKTtcblx0XHRcdFx0Y29uc3QgZ2V0RXZpZGVuY2UgPSBhd2FpdCBjb250cmFjdC5nZXRBbGxFdmlkZW5jZSgpO1xuXHRcdFx0XHRyZXR1cm4gZ2V0RXZpZGVuY2U7XG5cdFx0XHR9XG5cdFx0fWNhdGNoKGVycm9yKXtcblx0XHRcdHNldEVycm9yKFwiRXJyb3Igd2hpbGUgY3JlYXRpbmcgZXZpZGVuY2VcIik7XG5cdFx0fVxuXHR9XG5cdFxuXHRjb25zdCBhcHByb3ZlRXZpZGVuY2UgPSBhc3luYyhpZCkgPT57XG5cdFx0dHJ5e1xuXHRcdFx0aWYoY3VycmVudEFjY291bnQpe1xuXHRcdFx0XHRjb25zdCBjb250cmFjdCA9IGF3YWl0IGNvbm5lY3RpbmdXaXRoU21hcnRDb250cmFjdChcIm1hcmtldFwiKTtcblx0XHRcdFx0Y29uc3QgYXBwcm92ZUV2aWRlbmNlID0gYXdhaXQgY29udHJhY3QuYXBwcm92ZUV2aWRlbmNlKGlkKTtcblx0XHRcdFx0YXdhaXQgYXBwcm92ZUV2aWRlbmNlLndhaXQoKTtcblx0XHRcdFx0Y29uc29sZS5sb2coYXBwcm92ZUV2aWRlbmNlKTtcblx0XHRcdH1cblx0XHR9Y2F0Y2goZXJyb3Ipe1xuXHRcdFx0c2V0RXJyb3IoXCJFcnJvciB3aGlsZSBjcmVhdGluZyBldmlkZW5jZVwiKTtcblx0XHR9XG5cdH1cblxuXHRjb25zdCBjcmVhdGVPcmRlciA9IGFzeW5jKHByaWNlKSA9Pntcblx0XHR0cnl7XG5cdFx0XHRpZihjdXJyZW50QWNjb3VudCl7XG5cdFx0XHRcdGNvbnN0IGNvbnRyYWN0ID0gYXdhaXQgY29ubmVjdGluZ1dpdGhTbWFydENvbnRyYWN0KFwibWFya2V0XCIpO1xuXHRcdFx0XHRcblx0XHRcdFx0Ly8gY29uc3QgdHJ4ID0gYXdhaXQgY29udHJhY3RDb2luLmFwcHJvdmUoTWFya2V0QWRkcmVzcywgcHJpY2UpO1xuXHRcdFx0XHQvLyBhd2FpdCB0cngud2FpdCgpO1xuXG5cdFx0XHRcdGNvbnN0IGNyZWF0ZU9yZGVyID0gYXdhaXQgY29udHJhY3QuY3JlYXRlT3JkZXIocHJpY2UpO1xuXHRcdFx0XHRjb25zb2xlLmxvZyhjcmVhdGVPcmRlcik7XG5cdFx0XHR9XG5cdFx0fWNhdGNoKGVycm9yKXtcblx0XHRcdHNldEVycm9yKFwiRXJyb3Igd2hpbGUgY3JlYXRpbmcgZXZpZGVuY2VcIik7XG5cdFx0fVxuXHR9XG5cblx0Y29uc3QgZ2V0QWxsT3JkZXJzID0gYXN5bmMoKSA9Pntcblx0XHR0cnl7XG5cdFx0XHRpZihjdXJyZW50QWNjb3VudCl7XG5cdFx0XHRcdGNvbnN0IGNvbnRyYWN0ID0gYXdhaXQgY29ubmVjdGluZ1dpdGhTbWFydENvbnRyYWN0KFwibWFya2V0XCIpO1xuXHRcdFx0XHRjb25zdCBnZXRPcmRlcnMgPSBhd2FpdCBjb250cmFjdC5nZXRBbGxPcmRlcnMoKTtcblx0XHRcdFx0cmV0dXJuIGdldE9yZGVycztcblx0XHRcdH1cblx0XHR9Y2F0Y2goZXJyb3Ipe1xuXHRcdFx0c2V0RXJyb3IoXCJFcnJvciB3aGlsZSBjcmVhdGluZyBldmlkZW5jZVwiKTtcblx0XHR9XG5cdH1cblxuXHRjb25zdCBhY2NlcHRPcmRlciA9IGFzeW5jKGlkLCBwcmljZSkgPT57XG5cdFx0dHJ5e1xuXHRcdFx0aWYoY3VycmVudEFjY291bnQpe1xuXHRcdFx0XHRjb25zdCBjb250cmFjdCA9IGF3YWl0IGNvbm5lY3RpbmdXaXRoU21hcnRDb250cmFjdChcIm1hcmtldFwiKTtcblx0XHRcdFx0Y29uc3QgY29udHJhY3RDb2luID0gYXdhaXQgY29ubmVjdGluZ1dpdGhTbWFydENvbnRyYWN0KFwiY29pblwiKTtcblxuXHRcdFx0XHRjb25zdCB0cnggPSBhd2FpdCBjb250cmFjdENvaW4uYXBwcm92ZShNYXJrZXRBZGRyZXNzLCBwcmljZSk7XG5cdFx0XHRcdGF3YWl0IHRyeC53YWl0KCk7XG5cblx0XHRcdFx0Y29uc3QgYWNjZXB0T3JkZXIgPSBhd2FpdCBjb250cmFjdC5hY2NlcHRPcmRlcihpZCk7XG5cdFx0XHRcdGF3YWl0IGFjY2VwdE9yZGVyLndhaXQoKTtcblx0XHRcdFx0Y29uc29sZS5sb2coYWNjZXB0T3JkZXIpO1xuXHRcdFx0fVxuXHRcdH1jYXRjaChlcnJvcil7XG5cdFx0XHRzZXRFcnJvcihcIkVycm9yIHdoaWxlIGNyZWF0aW5nIGV2aWRlbmNlXCIpO1xuXHRcdH1cblx0fVxuXG5cblx0XG5cblx0cmV0dXJuIChcblx0XHQ8RXZpZGFuY2VDb250ZXh0LlByb3ZpZGVyXG5cdFx0XHR2YWx1ZT17e1xuXHRcdFx0XHRjaGVja0lmV2FsbGV0Q29ubmVjdGVkLFxuXHRcdFx0XHRjb25uZWN0V2FsbGV0LFxuXHRcdFx0XHRjdXJyZW50QWNjb3VudCxcblx0XHRcdFx0dGl0bGVEYXRhLFxuXHRcdFx0XHRlcnJvcixcblx0XHRcdFx0bG9hZGluZyxcblx0XHRcdFx0YWNjb3VudEJhbGFuY2UsXG5cdFx0XHRcdGNyZWF0ZUV2aWRlbmNlLFxuXHRcdFx0XHRnZXRBbGxFdmlkZW5jZSxcblx0XHRcdFx0YXBwcm92ZUV2aWRlbmNlLFxuXHRcdFx0XHRjcmVhdGVPcmRlcixcblx0XHRcdFx0Z2V0QWxsT3JkZXJzLFxuXHRcdFx0XHRhY2NlcHRPcmRlclxuXHRcdFx0fX1cblx0XHQ+XG5cdFx0XHR7Y2hpbGRyZW59XG5cdFx0PC9FdmlkYW5jZUNvbnRleHQuUHJvdmlkZXI+XG5cdCk7XG59O1xuIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJ1c2VDb250ZXh0IiwiV2ViM01vZGFsIiwiZXRoZXJzIiwiY29pbkFCSSIsIkNvaW5BZGRyZXNzIiwibWFya2V0QUJJIiwiTWFya2V0QWRkcmVzcyIsImZldGNoQ29udHJhY3QiLCJzaWduZXJPclByb3ZpZGVyIiwidHlwZSIsIkNvbnRyYWN0IiwiY29ubmVjdGluZ1dpdGhTbWFydENvbnRyYWN0Iiwid2ViM01vZGFsIiwiY29ubmVjdGlvbiIsImNvbm5lY3QiLCJwcm92aWRlciIsInByb3ZpZGVycyIsIldlYjNQcm92aWRlciIsInNpZ25lciIsImdldFNpZ25lciIsImNvbnRyYWN0IiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIiwiRXZpZGFuY2VDb250ZXh0IiwiY3JlYXRlQ29udGV4dCIsIkV2aWRhbmNlUHJvdmlkZXIiLCJjaGlsZHJlbiIsInRpdGxlRGF0YSIsInNldEVycm9yIiwiY3VycmVudEFjY291bnQiLCJzZXRDdXJyZW50QWNjb3VudCIsImFjY291bnRCYWxhbmNlIiwic2V0QWNjb3VudEJhbGFuY2UiLCJzZXRTaWduZXIiLCJsb2FkaW5nIiwic2V0TG9hZGluZyIsImNoZWNrSWZXYWxsZXRDb25uZWN0ZWQiLCJ3aW5kb3ciLCJldGhlcmV1bSIsImFjY291bnRzIiwicmVxdWVzdCIsIm1ldGhvZCIsImxlbmd0aCIsInRvTG93ZXJDYXNlIiwiZ2V0QmFsYW5jZSIsImJhbGFuY2VPZiIsImNvbm5lY3RXYWxsZXQiLCJjcmVhdGVFdmlkZW5jZSIsIk93bmVyTm9uY2UiLCJvd25lciIsImdldE5vbmNlIiwibm9uY2UiLCJnZXRBbGxFdmlkZW5jZSIsImdldEV2aWRlbmNlIiwiYXBwcm92ZUV2aWRlbmNlIiwiaWQiLCJ3YWl0IiwiY3JlYXRlT3JkZXIiLCJwcmljZSIsImdldEFsbE9yZGVycyIsImdldE9yZGVycyIsImFjY2VwdE9yZGVyIiwiY29udHJhY3RDb2luIiwidHJ4IiwiYXBwcm92ZSIsIlByb3ZpZGVyIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./Context/EvidanceContext.js\n"));

/***/ })

});